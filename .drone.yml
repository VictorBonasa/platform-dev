# First declare a few services that will run in background,
# mostly from https://hub.docker.com/r/fpfis/
matrix:
  FPFIS_PHP_VERSION:
    - 56 
  PLATFORM_PROFILE:
    - standard
    - communities
  SCALING_TEST:
    - garbage1
    - garbage2
    - garbage3
    - garbage4
    - garbage5
    - garbage6
    - garbage7

services:
  # centos 6 + httpd + php${FPFIS_PHP_VERSION}
  web:
    image: fpfis/php${FPFIS_PHP_VERSION}
    environment:
      - DOCROOT=/drone/src/github.com/ec-europa/platform-dev/build
  # centos 6 + mysql community
  mysql:
    image: fpfis/mysql${FPFIS_PHP_VERSION}
  # centos 6 + redis
  redis:
    image: fpfis/redis
  # centos 6 + varnish 5 + varnish plugins + nexteuropa VCL
  varnish:
    image: fpfis/nexteuropa-varnish5
  solr:
    # The following cores are available :
    # - http://127.0.0.1:8983/solr/d7_search_api
    # - http://127.0.0.1:8983/solr/d7_apachesolr
    image: fpfis/solr5
  # Selenium standalone
  selenium:
    image: selenium/standalone-chrome

# Start a pipeline ( sets of steps )
# Be advised that the container will be a new one every step
# therefore loosing all customization made in the previous step
# ( php settings, extension install )
pipeline:

  # Step name "prepare"
  prepare:
    # Use php${FPFIS_PHP_VERSION} image
    image: fpfis/php${FPFIS_PHP_VERSION}
    # Run the following commands
    commands:
      - cat /proc/{cpu,mem}info|sort|uniq -c|egrep -i "name|memtotal"
      - php --version
      - composer install --ansi
      - mysqladmin -h 127.0.0.1 create platform

  # Check code standards :
  qa:
    image: fpfis/php${FPFIS_PHP_VERSION}
    commands: 
      - ./bin/phpcs

  # Step name build
  build:
    image: fpfis/php${FPFIS_PHP_VERSION}
    commands: 
      - ./bin/phing build-platform-dev -Dcomposer.bin=$(which composer) -Dbehat.base_url='http://127.0.0.1:6080/' -Dbehat.wd_host.url='http://127.0.0.1:4444/wd/hub' -Dbehat.browser.name='chrome' -Dvarnish.server.port=6080 -Dplatform.profile.name=multisite_drupal_${PLATFORM_PROFILE}
      
  # And so on ...
  install:
    image: fpfis/php${FPFIS_PHP_VERSION}
    commands:
      - ./bin/phing install-platform -Dcomposer.bin=$(which composer) -Ddrupal.db.user=root -Ddrupal.db.password="" -Ddrupal.db.name=platform -Dplatform.profile.name=multisite_drupal_${PLATFORM_PROFILE}

  # Run testing :
  test:
    image: fpfis/php${FPFIS_PHP_VERSION}
    commands:
      # increase memory_limit for testing :
      - echo "memory_limit=512M" > /etc/php.d/00-memory-limit.ini
      - ./bin/phpunit -c tests/phpunit.xml
      - ./bin/behat -c build/behat.yml  --colors -f pretty --strict

  package:
    image: fpfis/php${FPFIS_PHP_VERSION}
    when:
      environment:
        PLATFORM_PROFILE: standard
    commands:
      - ./bin/phing build-multisite-dist -Dcomposer.bin=$(which composer)
      - tar cz --strip-components=1 build > ../platform-dev-${DRONE_COMMIT}.tar.gz
