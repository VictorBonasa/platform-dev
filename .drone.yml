# First declare a few services that will run in background,
# mostly from https://hub.docker.com/r/fpfis/
matrix:
  FPFIS_PHP_VERSION:
    - 56 
    - 70
    - 71
services:
  # centos 6 + httpd + php${FPFIS_PHP_VERSION}
  web:
    image: fpfis/php${FPFIS_PHP_VERSION}
    environment:
      - DOCROOT=/drone/src/github.com/ec-europa/platform-dev/build
  # centos 6 + mysql community
  mysql:
    image: fpfis/mysql${FPFIS_PHP_VERSION}
  # centos 6 + redis
  redis:
    image: fpfis/redis
  # centos 6 + varnish 5 + varnish plugins + nexteuropa VCL
  varnish:
    image: fpfis/nexteuropa-varnish5
  solr:
    # The following cores are available :
    # - http://127.0.0.1:8983/solr/d7_search_api
    # - http://127.0.0.1:8983/solr/d7_apachesolr
    image: fpfis/solr5
  # Selenium standalone
  selenium:
    image: selenium/standalone-chrome

# Start a pipeline ( sets of steps )
# Be advised that the container will be a new one every step
# therefore loosing all customization made in the previous step
# ( php settings, extension install )
pipeline:
  # Step name "prepare"
  prepare:
    # Use php${FPFIS_PHP_VERSION} image
    image: fpfis/php${FPFIS_PHP_VERSION}
    # Run the following commands
    commands:
      # prepare gw key
      - php --version
      - composer install --ansi
      - mysqladmin -h 127.0.0.1 create platform

  # Step name build
  build:
    image: fpfis/php${FPFIS_PHP_VERSION}
    commands: 
      - ./bin/phing build-platform-dev -Dcomposer.bin=$(which composer)
      
  # And so on ...
  install:
    image: fpfis/php${FPFIS_PHP_VERSION}
    commands:
      - ./bin/phing install-platform -Dcomposer.bin=$(which composer) -Ddrupal.db.user=root -Ddrupal.db.password="" -Ddrupal.db.name=platform
  test:
    image: fpfis/php${FPFIS_PHP_VERSION}
    commands:
      # increase memory_limit for testing :
      - echo "memory_limit=512M" > /etc/php.d/00-memory-limit.ini
      # check uncached version
      - curl http://127.0.0.1:80
      # check varnished version
      - curl http://127.0.0.1:6081
      # - ./bin/phpcs
      # Run behat tests :
      #- ./bin/behat -c build/behat.yml --colors --strict
